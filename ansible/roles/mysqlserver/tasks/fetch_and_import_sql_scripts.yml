---
- name: Create mysql schema directory
  ansible.builtin.file:
    path: "{{ mysql_paths.schema }}"
    state: directory
    mode: '0755'
    owner: "{{ mysql_linux_user }}"
    group: "{{ mysql_linux_user }}"

- name: Create mysql data directory
  ansible.builtin.file:
    path: "{{ mysql_paths.data }}"
    state: directory
    mode: '0755'
    owner: "{{ mysql_linux_user }}"
    group: "{{ mysql_linux_user }}"

- name: List all mysql schema files
  shell: >
    gsutil ls gs://"{{ code_bucket_name }}"/{{mysql_bucket_paths.schema}} |
    grep -v /$ |
    awk -F/ '{print $NF}'
  register: mysql_schema_files

- name: List all mysql data files
  shell: >
    gsutil ls gs://"{{ code_bucket_name }}"/{{mysql_bucket_paths.data}} |
    grep -v /$ |
    awk -F/ '{print $NF}'
  register: mysql_data_files

- name: Fetch all mysql schema files
  google.cloud.gcp_storage_object:
    action: download
    bucket: "{{ code_bucket_name }}"
    src:  "{{ mysql_bucket_paths.schema }}/{{ item }}"
    dest: "{{ mysql_paths.schema }}/{{ item }}"
    auth_kind: "application"
    scopes:
      - "https://www.googleapis.com/auth/devstorage.read_only"
  become_user: "{{ mysql_linux_user }}"
  loop: "{{ mysql_schema_files.stdout_lines }}"
  when: mysql_schema_files.stdout_lines is defined

- name: Fetch all mysql data files
  google.cloud.gcp_storage_object:
    action: download
    bucket: "{{ code_bucket_name }}"
    src:  "{{ mysql_bucket_paths.data }}/{{ item }}"
    dest: "{{ mysql_paths.data }}/{{ item }}"
    auth_kind: "application"
    scopes:
      - "https://www.googleapis.com/auth/devstorage.read_only"
  become_user: "{{ mysql_linux_user }}"
  loop: "{{ mysql_data_files.stdout_lines }}"
  when: mysql_data_files.stdout_lines is defined  

- name: Run schema files
  community.mysql.mysql_db:
    login_user: "{{ devopslab_mysql_user.username }}"
    login_password: "{{ devopslab_mysql_user.password }}"
    state: import
    name: web
    target:  "{{ mysql_paths.schema }}/{{ item }}"
    single_transaction: true
  become_user: "{{ mysql_linux_user }}"
  loop: "{{ mysql_schema_files.stdout_lines }}"
  when: mysql_schema_files.stdout_lines is defined

- name: Run data files
  community.mysql.mysql_db:
    login_user: "{{ devopslab_mysql_user.username }}"
    login_password: "{{ devopslab_mysql_user.password }}"
    state: import
    name: web
    target:  "{{ mysql_paths.data }}/{{ item }}"
    single_transaction: true
  become_user: "{{ mysql_linux_user }}"
  loop: "{{ mysql_data_files.stdout_lines }}"
  when: mysql_data_files.stdout_lines is defined
