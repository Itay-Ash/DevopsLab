---
- name: Run Web Servers
  hosts: webservers
  gather_facts: no
  vars_files:
    - vars/project_vars.yml
    - vars/general_vars.yml
  tasks:
    - name: Frontend - Create the destination directory
      ansible.builtin.file:
        path: "{{ webservers.paths.nginx.frontend }}"
        state: directory
        mode: '0755'
        owner: "{{ webservers.linux_user }}"
        group: "{{ webservers.linux_user }}"
    
    - name: Frontend - List all files in the GCP bucket folder
      shell: >
        gsutil ls gs://"{{ code_bucket_name }}"/{{webservers.paths.bucket.frontend}} |
        grep -v /$ |
        awk -F/ '{print $NF}'
      register: frontend_files

    - name: Frontend - Download files from GCP bucket
      google.cloud.gcp_storage_object:
        action: download
        bucket: "{{ code_bucket_name }}"
        src:  "{{ webservers.paths.bucket.frontend }}/{{ item }}"
        dest: "{{ webservers.paths.nginx.frontend }}/{{ item }}"
        auth_kind: "application"
        scopes:
          - "https://www.googleapis.com/auth/devstorage.read_only"
      loop: "{{ frontend_files.stdout_lines }}"
      when: frontend_files.stdout_lines is defined
      become_user: "{{ webservers.linux_user }}"


    - name: Backend - Create the destination directory
      ansible.builtin.file:
        path: "{{ webservers.paths.nginx.backend }}"
        state: directory
        mode: '0755'
        owner: "{{ webservers.linux_user }}"
        group: "{{ webservers.linux_user }}"
    
    - name: Backend - List all files in the GCP bucket folder
      shell: >
        gsutil ls gs://"{{ code_bucket_name }}"/{{webservers.paths.bucket.backend}} |
        grep -v /$ |
        awk -F/ '{print $NF}'
      register: backend_files

    - name: Backend - Download files from GCP bucket
      google.cloud.gcp_storage_object:
        action: download
        bucket: "{{ code_bucket_name }}"
        src:  "{{ webservers.paths.bucket.backend }}/{{ item }}"
        dest: "{{ webservers.paths.nginx.backend }}/{{ item }}"
        auth_kind: "application"
        scopes:
          - "https://www.googleapis.com/auth/devstorage.read_only"
      loop: "{{ backend_files.stdout_lines }}"
      when: backend_files.stdout_lines is defined
      become_user: "{{ webservers.linux_user }}"
